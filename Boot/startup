local StartScreen = paintutils.loadImage(".OSRunner/Resources/logo")
local W, H = term.getSize()
local nfs = {}
for i,v in pairs(fs) do
	nfs[i] = v
end 

local ShouldExist = {
".OSRunner/Keep";
".OSRunner/Kernels";
}

shell.run(".OSRunner/APIs/osrunner")

term.setBackgroundColor(colors.lime)
term.clear()
paintutils.drawImage(StartScreen, 8, 4)

term.setCursorPos(1, H)
term.setBackgroundColor(colors.lime)
term.setTextColor(colors.gray)
term.write("Press F5 for OSRunner options")

local function CenterPrint(Text, Line)
	term.setCursorPos((W-#Text)/2, Line)
	print(Text)
end 

local function EraseData()
	if nfs.exists(".OSRunner/Kernels") then
		nfs.delete(".OSRunner/Kernels")
	end 
end 

local function Setup()
	EraseData()
	nfs.makeDir(".OSRunner/Kernels")
	nfs.makeDir(".OSRunner/Keep")
	nfs.makeDir(".OSRunner/Kernels/CraftOS")
end 

local function Sand(Dir, OSName, SetupFile, SetupURL)
	os.run({},".OSRunner/APIs/osrunner")
	sandbox.load(Dir .. "/home", OSName, SetupFile, SetupURL)
end 

local function CheckFiles()

end 

local function StartLoader()
	local currentOS=1
	local ShouldSet = false
	for i,v in pairs(ShouldExist) do
		if not nfs.exists(v) then
			ShouldSet = true
		end 
	end 
	if ShouldSet == true then
		Setup()
	end 
	local OSList=nfs.list(".OSRunner/OSList/")
	while true do
		local Main = paintutils.loadImage(".OSRunner/Resources/main")
		term.setBackgroundColor(colors.white)
		term.clear()
		paintutils.drawImage(Main, 1, 1)
		term.setBackgroundColor(colors.red)
		term.setTextColor(colors.white)
		CenterPrint("OSRunner Options", 1)
		term.setBackgroundColor(colors.lightGray)
		term.setTextColor(colors.black)
		term.setCursorPos(4, 12)
		if currentOS==1 then term.setTextColor(colors.gray) end
		write("Back")
		if currentOS==1 then term.setTextColor(colors.black) end
		term.setCursorPos(45, 12)
		if currentOS==#OSList then term.setTextColor(colors.gray) end
		write("Next")
		if currentOS==#OSList then term.setTextColor(colors.black) end
		term.setCursorPos(4, 15)
		if not fs.exists(".OSRunner/Kernels/"..OSList[currentOS]) then term.setTextColor(colors.gray) end
		write("Delete OS")
		if not fs.exists(".OSRunner/Kernels/"..OSList[currentOS]) then term.setTextColor(colors.black) end
		term.setCursorPos(2, 17)
		write("System settings")
		term.setCursorPos(22, 16)
		write("Launch OS")
		term.setCursorPos(40,15)
		if currentOS==1 then term.setTextColor(colors.gray) end
		write("First")
		if currentOS==1 then term.setTextColor(colors.black) end
		term.setCursorPos(40,17)
		if currentOS==#OSList then term.setTextColor(colors.gray) end
		write("Last")
		if currentOS==#OSList then term.setTextColor(colors.black) end
		term.setBackgroundColor(colors.lightGray)
		term.setCursorPos(2, 3)
		term.write(string.rep(" ", W - 2))
		local v=OSList[currentOS]
		CenterPrint(v, 3)
		local event,btw,x,y=os.pullEventRaw("mouse_click")
		if x >= 4 and x <= 7 and y==12 and currentOS > 1 then
			currentOS=currentOS-1
		elseif x >= 45 and x <= 48 and y==12 and currentOS < #OSList then
			currentOS=currentOS+1
		elseif x >= 4 and x <= 12 and y==15 and fs.exists(".OSRunner/Kernels/"..OSList[currentOS]) then
			fs.delete(".OSRunner/Kernels/"..OSList[currentOS])
			term.setTextColor(colors.black)
			CenterPrint("Deleted "..OSList[currentOS],5)
		elseif x >= 2 and x <= 17 and y==17 then
			settings()
		elseif x >= 22 and x <= 30 and y==16 then
			local readConf=fs.open(".OSRunner/OSList/"..OSList[currentOS],"r")
			local dir=readConf.readLine()
			local OSName=readConf.readLine()
			local setupFile=readConf.readLine()
			local setupURL=readConf.readLine()
			readConf.close()
			if not fs.exists(".OSRunner/Kernels/"..OSList[currentOS]) then
				Sand(dir,OSName,setupFile,setupURL)
			else
				Sand(dir,OSName)
			end
			break
		elseif x >= 40 and x <= 44 and y==15 and currentOS > 1 then
			currentOS=1
		elseif x >= 40 and x <= 43 and y==17 and currentOS < #OSList then
			currentOS=#OSList
		end
	end 
end

local function RunDef()
	local ShouldSet = false
	for i,v in pairs(ShouldExist) do
		if not nfs.exists(v) then
			ShouldSet = true
		end 
	end 
	if ShouldSet == true then
		Setup()
	end 
	term.setBackgroundColor(colors.lime)
	term.clear()
	Sand(".OSRunner/Kernels/CraftOS", "CraftOS")
end 

local function settings()
	-- Snippet
end

os.startTimer(3)
while true do
	local event, p1, p2 = os.pullEvent()
	if event == "key" and p1 == 63 then
		StartLoader()
		break
	elseif event == "timer" then
		RunDef()
		break
	end 
end 